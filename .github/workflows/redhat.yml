name: Redhat Test

on:
  workflow_dispatch:

permissions: write-all

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3

#    - name: Error
#      # エラーでも処理を継続する
#      continue-on-error: true
#      # あとで実行結果を参照するため、IDを振っておく
#      id: error_execution
#      # ディレクトリが存在することで、2回目は確実にエラーになる
#      run: |
#        mkdir hoge
#        mkdir hoge
#    - name: Error handling
#      if: ${{ steps.error_execution.outcome == 'failure' }}
#      run: |
#        echo "Error handling"
#        echo $
#        exit 1

    - name: DL oc-mirror.tar.gz & mirror-registry.tar.gz
      run: |
        ls -lrt
        wget https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/oc-mirror.tar.gz
        wget https://developers.redhat.com/content-gateway/rest/mirror/pub/openshift-v4/clients/mirror-registry/latest/mirror-registry.tar.gz
        ls -lrt

    - name: oc-mirror
      run: |
        tar xvzf oc-mirror.tar.gz
        chmod +x oc-mirror
        sudo mv oc-mirror /usr/local/bin/.
        oc mirror help

    - name: AuthForImgMrr
      run: |
        mkdir -p $XDG_RUNTIME_DIR/containers
        cp pull-secret.json $XDG_RUNTIME_DIR/containers/auth.json
        ls -lrt $XDG_RUNTIME_DIR/containers
        cat $XDG_RUNTIME_DIR/containers/auth.json
        cat /etc/passwd
#        cat ./pull-secret.txt | jq . > ./pull-secret.json
#        ls -lZ ./pull-secret.json

    - name: ocCmdIns
      run: |
       sudo apt install cabextract
       cabextract oc-4.11.27-linux.tar.gz1.cab
       tar xvzf oc-4.11.27-linux.tar.gz
       echo $PATH
       sudo mv oc /usr/local/bin/
       oc version
#       cabextract oc-4.14.5-linux.tar.gz1.cab
#       tar xvzf oc-4.14.5-linux.tar.gz
#       wget https://access.cdn.redhat.com/content/origin/files/sha256/a2/a25d381e66c202a5a73b2146c839b78701e64548ca76ce14c8373e242f67bac5/oc-4.14.5-linux.tar.gz?user=ae639a49042aa18ed24d083f948d7e27&_auth_=1702018434_6a536b43310610e9182785b7384dce5a
#       tar xvzf oc-4.11.27-linux.tar.gz

    - name: ImgsetMk
      # エラーでも処理を継続する
      continue-on-error: true
      run: |
       rm -rf ./metadata
       rm -rf ./redhat-operators
       mkdir -p ./metadata
       mkdir -p ./redhat-operators
       oc mirror --config=./imageset-config.yaml file://./redhat-operators

    - name: Error handling
      if: ${{ steps.error_execution.outcome == 'failure' }}
      run: |
        oc mirror --config=./imageset-config.yaml file://./redhat-operators

#       cp -r ./oc-mirror-workspace ./redhat-operators
#       ls -lrt ./redhat-operators/oc-mirror-workspace/operators.1702085673/manifests-redhat-operator-index/
#       oc mirror init > imageset-config_tmp.yaml
#       sed 's/path\:\ \.\//path\:\ \.\/metadata\//g' imageset-config_tmp.yaml > imageset-config.yaml
#       mkdir -p /home/user/metadata
#       mkdir -p /home/user/redhat-operators
#       sed 's/<storage_backend_path>/\/home\/user\/metadata/g' imageset-config_tmp.yaml > imageset-config.yaml
#       oc mirror --config=./imageset-config.yaml file:///home/user/redhat-operators

#    - name: Upload Artifacts
#      uses: actions/upload-artifact@v3
#      with:
#         name: FilePath
#         path: python-image-all.tar
