name: Build Artifact Test

on:
  workflow_dispatch:

permissions: write-all

env:
  path: "deployment/offline-assets/images"

jobs:

#  fetch-oc:
#    name: Fetch oc
#    uses: gntks/test20231024_2/.github/workflows/run_id_test.yml@master
#    uses: nttrd-nic/smo_mano-home/.github/workflows/page-to-nfs.yml@develop

#  fetch-oc2:
#    name: Fetch oc2
#    uses: gntks/test20231024_2/.github/workflows/run_id_test.yml@master
#    uses: nttrd-nic/smo_mano-home/.github/workflows/page-to-nfs.yml@develop

  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v3

    - name: CharTest
      run: |
        string="stirng" ; echo "${string//ir/ri}"

#         echo ${TEST}
#         TEST = ${"deployment/offline-assets/images"//-/_}
#         TEST = ${env.path///_}

    - name: GitFetch
      run: git fetch -p
   
    - name: GitCheckout
      run: git checkout master
#      run: git checkout master_20231026
    
    - name: GitBranch
      run: git branch
    
    - name: Build the Docker image
      run: docker build . --file sample_python/Dockerfile -t python-image

    - name: DcImg
      run: docker images

    - name: DcSave
      run: |
         docker save python-image > python-image.tar
#        docker save python-image | gzip > python-image.tar2.gz

#    - name: Cp Tar
#      run: |
#        mkdir ./tarfile
#        cp python-image.tar ./tarfile/python-image2.tar
#        cp python-image.tar ./tarfile/python-image3.tar
#        cp python-image.tar ./tarfile/python-image4.tar
#        cp python-image.tar ./tarfile/python-image5.tar
#        cp python-image.tar ./tarfile/python-image6.tar
#        cp python-image.tar ./tarfile/python-image7.tar
#        cp python-image.tar ./tarfile/python-image8.tar
#        cp python-image.tar ./tarfile/python-image9.tar
#        cp python-image.tar ./tarfile/python-image10.tar
#        cp python-image.tar ./tarfile/python-image11.tar
#        cp python-image.tar ./tarfile/python-image12.tar
#        cp python-image.tar ./tarfile/python-image13.tar
#        cp python-image.tar ./tarfile/python-image14.tar
#        cp python-image.tar ./tarfile/python-image15.tar
#        cp python-image.tar ./tarfile/python-image16.tar
#        tar --remove-files -cvf python-image-all.tar ./tarfile
#        ls -lrt
#        df        
#        tar cvf python-image-all.tar python-image.tar python-image2.tar python-image3.tar python-image4.tar

#    - name: Dummy Spilit
#      run: |
#        dd if=/dev/zero of=1.3G.dummy bs=1M count=1300
#        split -b 500M -d -a 3 1.3G.dummy 1.3G.dummy
#        ls -lrt
#        df

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
         name: FilePath-${{env.path}}
         path: python-image.tar
#         name: FilePath-${{ github.run_id }}
#         path: python-image-all.tar

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
         name: FilePath-${{env.path}}-2
         path: python-image.tar
#         name: FilePath-${{ github.run_id }}-2
#         path: python-image-all.tar

